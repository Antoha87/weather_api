version: '3.7'

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/posgresql/data/
    environment:
      - POSTGRES_DB=weather_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=1111
  django:
    build: .
    command: bash -c "python3 /app/weather_app/manage.py makemigrations
                      && python3 /app/weather_app/manage.py migrate
                      && cd /app/weather_app && gunicorn --workers=2 weather_app.wsgi:application --bind 0.0.0.0:8000"
#                      && python3 /app/weather_app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - /static:/static
      - /media:/media
    ports:
      - "8000:8000"
    depends_on:
      - db
  frontend:
    build: ./frontend/front_app
    command: bash -c "npm start"
    volumes:
      - ./frontend/front_app:/app/frontend/front_app
    ports:
      - "3000:3000"
  redis:
    image: redis:alpine
  celery:
    restart: always
    build:
      context: .
    command: bash -c "cd weather_app
                      && celery -A weather_app worker --loglevel=info"
    volumes:
      - .:/app
    environment:
      - DB_HOST=db
      - DB_NAME=weather_db
      - DB_USER=admin
      - DB_PASS=1111
    depends_on:
      - db
      - redis
      - django
  celery-beat:
    restart: always
    build:
      context: .
    command: bash -c "cd weather_app
             && celery -A weather_app beat --loglevel=info"
    volumes:
      - .:/app
    environment:
      - DB_HOST=db
      - DB_NAME=weather_db
      - DB_USER=admin
      - DB_PASS=1111
    depends_on:
      - db
      - redis
      - django

  nginx:
    build:
      context: .
      dockerfile: nginx/nginx.Dockerfile
    depends_on:
      - django
    ports:
      - "80:80"
    container_name: weather_nginx
    volumes:
      - /static:/static
      - /media:/media

volumes:
  postgres_data: